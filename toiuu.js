document.addEventListener("DOMContentLoaded", function () {
    console.log("üöÄ ƒêang t·ªëi ∆∞u trang web...");

    /** 1Ô∏è‚É£ Lazy Load h√¨nh ·∫£nh */
    function lazyLoadImages() {
        const images = document.querySelectorAll("img[data-src]");
        const observer = new IntersectionObserver((entries, observer) => {
            entries.forEach(entry => {
                if (entry.isIntersecting) {
                    let img = entry.target;
                    img.src = img.getAttribute("data-src");
                    img.removeAttribute("data-src");
                    observer.unobserve(img);
                }
            });
        });

        images.forEach(img => observer.observe(img));
    }

    /** 2Ô∏è‚É£ Tr√¨ ho√£n Script kh√¥ng quan tr·ªçng */
    function deferScripts() {
        document.querySelectorAll("script[data-defer]").forEach(script => {
            let newScript = document.createElement("script");
            newScript.src = script.getAttribute("data-defer");
            document.body.appendChild(newScript);
            script.remove();
        });
    }

    /** 3Ô∏è‚É£ T·∫°m d·ª´ng hi·ªáu ·ª©ng khi tab b·ªã ·∫©n */
    function handleVisibilityChange() {
        document.documentElement.style.setProperty("--animation-speed", document.hidden ? "0" : "1");
    }

    /** 4Ô∏è‚É£ Gi·∫£m thi·ªÉu b·ªô nh·ªõ s·ª≠ d·ª•ng */
    function cleanUpMemory() {
        if (window.gc) {
            window.gc();
        } else {
            console.log("üîÑ D·ªçn d·∫πp b·ªô nh·ªõ...");
        }
    }

    /** 5Ô∏è‚É£ T·ªëi ∆∞u b·ªô nh·ªõ cache */
    function optimizeCache() {
        const now = Date.now();
        const cacheData = localStorage.getItem("cache_timestamp");
        if (!cacheData || now - parseInt(cacheData) > 86400000) { // 1 ng√†y
            localStorage.clear();
            localStorage.setItem("cache_timestamp", now.toString());
            console.log("‚ö° ƒê√£ x√≥a cache c≈©!");
        }
    }

    /** üî• K√≠ch ho·∫°t c√°c t√≠nh nƒÉng t·ªëi ∆∞u */
    lazyLoadImages();
    deferScripts();
    document.addEventListener("visibilitychange", handleVisibilityChange);
    setInterval(cleanUpMemory, 30000);
    optimizeCache();

    console.log("‚úÖ Trang web ƒë√£ t·ªëi ∆∞u xong!");
});


document.addEventListener("DOMContentLoaded", function () {
    console.log("üöÄ ƒêang t·ªëi ∆∞u trang web...");

    /** 1Ô∏è‚É£ Lazy Load h√¨nh ·∫£nh */
    function lazyLoadImages() {
        const images = document.querySelectorAll("img[data-src]");
        const observer = new IntersectionObserver((entries, observer) => {
            entries.forEach(entry => {
                if (entry.isIntersecting) {
                    let img = entry.target;
                    img.src = img.getAttribute("data-src");
                    img.removeAttribute("data-src");
                    observer.unobserve(img);
                }
            });
        });

        images.forEach(img => observer.observe(img));
    }

    /** 2Ô∏è‚É£ Tr√¨ ho√£n Script kh√¥ng quan tr·ªçng */
    function deferScripts() {
        document.querySelectorAll("script[data-defer]").forEach(script => {
            let newScript = document.createElement("script");
            newScript.src = script.getAttribute("data-defer");
            document.body.appendChild(newScript);
            script.remove();
        });
    }

    /** 3Ô∏è‚É£ T·∫°m d·ª´ng hi·ªáu ·ª©ng khi tab b·ªã ·∫©n */
    function handleVisibilityChange() {
        document.documentElement.style.setProperty("--animation-speed", document.hidden ? "0" : "1");
    }

    /** 4Ô∏è‚É£ Gi·∫£m thi·ªÉu b·ªô nh·ªõ s·ª≠ d·ª•ng */
    function cleanUpMemory() {
        if (window.gc) {
            window.gc();
        } else {
            console.log("üîÑ D·ªçn d·∫πp b·ªô nh·ªõ...");
        }
    }

    /** 5Ô∏è‚É£ T·ªëi ∆∞u b·ªô nh·ªõ cache */
    function optimizeCache() {
        const now = Date.now();
        const cacheData = localStorage.getItem("cache_timestamp");
        if (!cacheData || now - parseInt(cacheData) > 86400000) { // 1 ng√†y
            localStorage.clear();
            localStorage.setItem("cache_timestamp", now.toString());
            console.log("‚ö° ƒê√£ x√≥a cache c≈©!");
        }
    }

    /** üî• K√≠ch ho·∫°t c√°c t√≠nh nƒÉng t·ªëi ∆∞u */
    lazyLoadImages();
    deferScripts();
    document.addEventListener("visibilitychange", handleVisibilityChange);
    setInterval(cleanUpMemory, 30000);
    optimizeCache();

    console.log("‚úÖ Trang web ƒë√£ t·ªëi ∆∞u xong!");
});



(function () {
    // H√†m ƒë·ªÉ m√£ h√≥a chu·ªói (c√≥ th·ªÉ thay ƒë·ªïi thu·∫≠t to√°n n·∫øu c·∫ßn)
    function encryptText(text) {
        return btoa(text).replace(/=/g, ""); // Base64 kh√¥ng c√≥ d·∫•u '='
    }

    // H√†m t√¨m v√† m√£ h√≥a c√°c API Key / Token trong m√£ ngu·ªìn
    function maskSensitiveData() {
        let elements = document.querySelectorAll("*"); // L·∫•y t·∫•t c·∫£ ph·∫ßn t·ª≠
        elements.forEach(el => {
            if (el.childNodes.length > 0) {
                el.childNodes.forEach(node => {
                    if (node.nodeType === 3) { // N·∫øu l√† text
                        let text = node.nodeValue;
                        let regex = /\b[A-Za-z0-9_-]{25,}\b/g; // Regex t√¨m API Key ho·∫∑c Token
                        if (regex.test(text)) {
                            node.nodeValue = text.replace(regex, match => encryptText(match)); // M√£ h√≥a
                        }
                    }
                });
            }
        });
    }

    // NgƒÉn DevTools m·ªü
    function detectDevTools() {
        let devtools = false;
        const element = new Image();
        Object.defineProperty(element, "id", {
            get: function () {
                devtools = true;
                throw new Error("DevTools detected");
            },
        });

        requestAnimationFrame(() => {
            console.clear();
            console.log(element);
            if (devtools) {
                alert("Ph√°t hi·ªán DevTools! Vui l√≤ng ƒë√≥ng n√≥ ƒë·ªÉ ti·∫øp t·ª•c.");
                window.location.href = "about:blank";
            }
        });
    }

    // G·ªçi khi trang t·∫£i xong
    window.onload = function () {
        maskSensitiveData();
        setInterval(detectDevTools, 1000);
    };
})();
